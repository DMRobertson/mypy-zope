from typing import Type

class InterfaceType(type):
    def __getitem__(self, key, default=None):
        ...
    ...

class Interface(metaclass=InterfaceType):
    ...

class implementer(object):
    def __init__(self, *interfaces: Type[Interface]):
        ...
    def __call__(self, ob):
        ...

def moduleProvides(*interfaces: Type[Interface]):...

class Element:
    def __init__(self, __name__: str, __doc__='') -> None:
        ...

class Attribute(Element): ...